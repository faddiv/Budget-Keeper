{
	"React Component": {
		"prefix": "react.component",
		"body": [
			"import * as React from \"react\";",
			"",
			"export interface ${1:${TM_FILENAME_BASE}}Props {",
			"}",
			"",
			"export interface ${1:${TM_FILENAME_BASE}}State {",
			"}",
			"",
			"export class ${1} extends React.Component<${1}Props, ${1}State> {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"\t}",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t$0",
			"\t\t);",
			"\t}",
			"}"
		],
		"description": "Log output to console"
	},
	"React Stateless Function": {
		"prefix": "react.function",
		"body": [
			"import * as React from \"react\";",
			"",
			"interface ${1:${TM_FILENAME_BASE}}Props { $2 }",
			"",
			"export const ${1}: React.SFC< ${1}Props> = ({ $2, ...rest }) => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"};",
			"",
			"${1}.defaultProps = { };"
		]
	},
	"React Stateless Function with connect": {
		"prefix": "react.function.redux",
		"body": [
			"import * as React from \"react\";",
			"import { connect } from \"react-redux\";",
			"import { Dispatch } from \"redux\";",
			"",
			"interface ${1:${TM_FILENAME_BASE}}Props extends ReturnType<typeof mapDispatchToProps>, ReturnType<typeof mapStateToProps> {",
			"\t$2",
			"}",
			"",
			"const ${1}Internal: React.SFC< ${1}Props> = ({ $2, ...rest }) => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"};",
			"",
			"${1}Internal.defaultProps = { };",
			"",
			"function mapStateToProps(state: ${3:RootState}) {",
    		"\treturn {};",
			"}",
			"",
			"function mapDispatchToProps(dispatch: Dispatch) {",
			"\treturn {};",
			"}",
			"",
			"export const ${1} = connect(mapStateToProps, mapDispatchToProps)(${1}Internal);",
			""
		]
	},
	"React setState Async": {
		"prefix": "react.state.async",
		"body": [
			"this.setState((prevState, props) => {",
			"\treturn {",
			"\t\t$0",
			"\t};",
			"});"
		]
	},
	"React deconstruct": {
		"prefix": "react.deconstruct",
		"body": [
			"const { $1 } = this.props;",
			"const { $0 } = this.state;"
		]
	},
	"React bootstrap table": {
		"prefix": "table.react",
		"body": [
			"<table className=\"table\">",
			"\t<thead>",
			"\t\t<tr>",
			"\t\t\t<td></td>$0",
			"\t\t</tr>",
			"\t</thead>",
			"\t<tbody>",
			"\t\t{$1.map(item => (",
			"\t\t\t<tr>",
			"\t\t\t\t<td></td>",
			"\t\t\t</tr>",
			"\t\t))}",
			"\t</tbody>",
			"</table>"
		]
	},
	"it Test Karma": {
		"prefix": "itt",
		"body": [
			"it(\"$1\", () => {",
			"\t$0",
			"});"
		],
		"description": "Karma Test"
	},
	"describe Test Karma": {
		"prefix": "describe",
		"body": [
			"describe(\"$1\", () => {",
			"\t$0",
			"});"
		],
		"description": "Karma Test"
	},
	"beforeEach Test Karma": {
		"prefix": "beforeEach",
		"body": [
			"beforeEach(() => {",
			"\t$0",
			"});"
		],
		"description": "Karma Test"
	},
	"beforeAll Test Karma": {
		"prefix": "beforeAll",
		"body": [
			"beforeAll(() => {",
			"\t$0",
			"});"
		],
		"description": "Karma Test"
	}
}