//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FilterLexer.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace OnlineWallet.Web.QueryLanguage.Parser {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class FilterLexer : Lexer {
	public const int
		AND=1, OR=2, COMPARISON=3, STRING=4, WORD=5, WHITESPACE=6;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"AND", "OR", "COMPARISON", "ESCAPED_CHARACTER", "SPECIAL_CHARACTER", "STRING", 
		"WORD", "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", 
		"N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "WHITESPACE"
	};


	    protected const int EOF = Eof;
	    protected const int HIDDEN = Hidden;


	public FilterLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
	};
	private static readonly string[] _SymbolicNames = {
		null, "AND", "OR", "COMPARISON", "STRING", "WORD", "WHITESPACE"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "FilterLexer.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\b\xB2\b\x1\x4\x2"+
		"\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b\x4"+
		"\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4\x10"+
		"\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15\t\x15"+
		"\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A\x4\x1B"+
		"\t\x1B\x4\x1C\t\x1C\x4\x1D\t\x1D\x4\x1E\t\x1E\x4\x1F\t\x1F\x4 \t \x4!"+
		"\t!\x4\"\t\"\x4#\t#\x3\x2\x3\x2\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x3\x4\x5\x4X\n\x4\x3\x5\x3\x5"+
		"\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3\x5\x3"+
		"\x5\x5\x5h\n\x5\x3\x6\x3\x6\x3\a\x3\a\x3\a\a\ao\n\a\f\a\xE\ar\v\a\x3\a"+
		"\x3\a\x3\b\x6\bw\n\b\r\b\xE\bx\x3\t\x3\t\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f"+
		"\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\x10\x3\x10\x3\x11\x3\x11\x3\x12"+
		"\x3\x12\x3\x13\x3\x13\x3\x14\x3\x14\x3\x15\x3\x15\x3\x16\x3\x16\x3\x17"+
		"\x3\x17\x3\x18\x3\x18\x3\x19\x3\x19\x3\x1A\x3\x1A\x3\x1B\x3\x1B\x3\x1C"+
		"\x3\x1C\x3\x1D\x3\x1D\x3\x1E\x3\x1E\x3\x1F\x3\x1F\x3 \x3 \x3!\x3!\x3\""+
		"\x3\"\x3#\x3#\x3#\x3#\x2\x2\x2$\x3\x2\x3\x5\x2\x4\a\x2\x5\t\x2\x2\v\x2"+
		"\x2\r\x2\x6\xF\x2\a\x11\x2\x2\x13\x2\x2\x15\x2\x2\x17\x2\x2\x19\x2\x2"+
		"\x1B\x2\x2\x1D\x2\x2\x1F\x2\x2!\x2\x2#\x2\x2%\x2\x2\'\x2\x2)\x2\x2+\x2"+
		"\x2-\x2\x2/\x2\x2\x31\x2\x2\x33\x2\x2\x35\x2\x2\x37\x2\x2\x39\x2\x2;\x2"+
		"\x2=\x2\x2?\x2\x2\x41\x2\x2\x43\x2\x2\x45\x2\b\x3\x2 \x4\x2>>@@\x4\x2"+
		"$$^^\x5\x2\x32;\x43\\\x63|\x4\x2\x43\x43\x63\x63\x4\x2\x44\x44\x64\x64"+
		"\x4\x2\x45\x45\x65\x65\x4\x2\x46\x46\x66\x66\x4\x2GGgg\x4\x2HHhh\x4\x2"+
		"IIii\x4\x2JJjj\x4\x2KKkk\x4\x2LLll\x4\x2MMmm\x4\x2NNnn\x4\x2OOoo\x4\x2"+
		"PPpp\x4\x2QQqq\x4\x2RRrr\x4\x2SSss\x4\x2TTtt\x4\x2UUuu\x4\x2VVvv\x4\x2"+
		"WWww\x4\x2XXxx\x4\x2YYyy\x4\x2ZZzz\x4\x2[[{{\x4\x2\\\\||\x6\x2\v\r\xF"+
		"\xF\"\"\xA2\xA2\xA2\x2\x3\x3\x2\x2\x2\x2\x5\x3\x2\x2\x2\x2\a\x3\x2\x2"+
		"\x2\x2\r\x3\x2\x2\x2\x2\xF\x3\x2\x2\x2\x2\x45\x3\x2\x2\x2\x3G\x3\x2\x2"+
		"\x2\x5K\x3\x2\x2\x2\aW\x3\x2\x2\x2\tg\x3\x2\x2\x2\vi\x3\x2\x2\x2\rk\x3"+
		"\x2\x2\x2\xFv\x3\x2\x2\x2\x11z\x3\x2\x2\x2\x13|\x3\x2\x2\x2\x15~\x3\x2"+
		"\x2\x2\x17\x80\x3\x2\x2\x2\x19\x82\x3\x2\x2\x2\x1B\x84\x3\x2\x2\x2\x1D"+
		"\x86\x3\x2\x2\x2\x1F\x88\x3\x2\x2\x2!\x8A\x3\x2\x2\x2#\x8C\x3\x2\x2\x2"+
		"%\x8E\x3\x2\x2\x2\'\x90\x3\x2\x2\x2)\x92\x3\x2\x2\x2+\x94\x3\x2\x2\x2"+
		"-\x96\x3\x2\x2\x2/\x98\x3\x2\x2\x2\x31\x9A\x3\x2\x2\x2\x33\x9C\x3\x2\x2"+
		"\x2\x35\x9E\x3\x2\x2\x2\x37\xA0\x3\x2\x2\x2\x39\xA2\x3\x2\x2\x2;\xA4\x3"+
		"\x2\x2\x2=\xA6\x3\x2\x2\x2?\xA8\x3\x2\x2\x2\x41\xAA\x3\x2\x2\x2\x43\xAC"+
		"\x3\x2\x2\x2\x45\xAE\x3\x2\x2\x2GH\x5\x11\t\x2HI\x5+\x16\x2IJ\x5\x17\f"+
		"\x2J\x4\x3\x2\x2\x2KL\x5-\x17\x2LM\x5\x33\x1A\x2M\x6\x3\x2\x2\x2NO\a>"+
		"\x2\x2OX\a?\x2\x2PQ\a@\x2\x2QX\a?\x2\x2RS\a?\x2\x2SX\a?\x2\x2TU\a#\x2"+
		"\x2UX\a?\x2\x2VX\t\x2\x2\x2WN\x3\x2\x2\x2WP\x3\x2\x2\x2WR\x3\x2\x2\x2"+
		"WT\x3\x2\x2\x2WV\x3\x2\x2\x2X\b\x3\x2\x2\x2YZ\a^\x2\x2Zh\a)\x2\x2[\\\a"+
		"^\x2\x2\\h\a$\x2\x2]^\a^\x2\x2^h\ap\x2\x2_`\a^\x2\x2`h\ah\x2\x2\x61\x62"+
		"\a^\x2\x2\x62h\at\x2\x2\x63\x64\a^\x2\x2\x64h\av\x2\x2\x65\x66\a^\x2\x2"+
		"\x66h\ax\x2\x2gY\x3\x2\x2\x2g[\x3\x2\x2\x2g]\x3\x2\x2\x2g_\x3\x2\x2\x2"+
		"g\x61\x3\x2\x2\x2g\x63\x3\x2\x2\x2g\x65\x3\x2\x2\x2h\n\x3\x2\x2\x2ij\x5"+
		"\t\x5\x2j\f\x3\x2\x2\x2kp\a$\x2\x2lo\n\x3\x2\x2mo\x5\v\x6\x2nl\x3\x2\x2"+
		"\x2nm\x3\x2\x2\x2or\x3\x2\x2\x2pn\x3\x2\x2\x2pq\x3\x2\x2\x2qs\x3\x2\x2"+
		"\x2rp\x3\x2\x2\x2st\a$\x2\x2t\xE\x3\x2\x2\x2uw\t\x4\x2\x2vu\x3\x2\x2\x2"+
		"wx\x3\x2\x2\x2xv\x3\x2\x2\x2xy\x3\x2\x2\x2y\x10\x3\x2\x2\x2z{\t\x5\x2"+
		"\x2{\x12\x3\x2\x2\x2|}\t\x6\x2\x2}\x14\x3\x2\x2\x2~\x7F\t\a\x2\x2\x7F"+
		"\x16\x3\x2\x2\x2\x80\x81\t\b\x2\x2\x81\x18\x3\x2\x2\x2\x82\x83\t\t\x2"+
		"\x2\x83\x1A\x3\x2\x2\x2\x84\x85\t\n\x2\x2\x85\x1C\x3\x2\x2\x2\x86\x87"+
		"\t\v\x2\x2\x87\x1E\x3\x2\x2\x2\x88\x89\t\f\x2\x2\x89 \x3\x2\x2\x2\x8A"+
		"\x8B\t\r\x2\x2\x8B\"\x3\x2\x2\x2\x8C\x8D\t\xE\x2\x2\x8D$\x3\x2\x2\x2\x8E"+
		"\x8F\t\xF\x2\x2\x8F&\x3\x2\x2\x2\x90\x91\t\x10\x2\x2\x91(\x3\x2\x2\x2"+
		"\x92\x93\t\x11\x2\x2\x93*\x3\x2\x2\x2\x94\x95\t\x12\x2\x2\x95,\x3\x2\x2"+
		"\x2\x96\x97\t\x13\x2\x2\x97.\x3\x2\x2\x2\x98\x99\t\x14\x2\x2\x99\x30\x3"+
		"\x2\x2\x2\x9A\x9B\t\x15\x2\x2\x9B\x32\x3\x2\x2\x2\x9C\x9D\t\x16\x2\x2"+
		"\x9D\x34\x3\x2\x2\x2\x9E\x9F\t\x17\x2\x2\x9F\x36\x3\x2\x2\x2\xA0\xA1\t"+
		"\x18\x2\x2\xA1\x38\x3\x2\x2\x2\xA2\xA3\t\x19\x2\x2\xA3:\x3\x2\x2\x2\xA4"+
		"\xA5\t\x1A\x2\x2\xA5<\x3\x2\x2\x2\xA6\xA7\t\x1B\x2\x2\xA7>\x3\x2\x2\x2"+
		"\xA8\xA9\t\x1C\x2\x2\xA9@\x3\x2\x2\x2\xAA\xAB\t\x1D\x2\x2\xAB\x42\x3\x2"+
		"\x2\x2\xAC\xAD\t\x1E\x2\x2\xAD\x44\x3\x2\x2\x2\xAE\xAF\t\x1F\x2\x2\xAF"+
		"\xB0\x3\x2\x2\x2\xB0\xB1\b#\x2\x2\xB1\x46\x3\x2\x2\x2\b\x2Wgnpx\x3\x2"+
		"\x3\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace OnlineWallet.Web.QueryLanguage.Parser
