//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.4
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from FilterParser.g4 by ANTLR 4.6.4

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace OnlineWallet.Web.QueryLanguage.Parser {

using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFilterParserListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.4")]
[System.CLSCompliant(false)]
public partial class FilterParserBaseListener : IFilterParserListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FilterParser.filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilter([NotNull] FilterParser.FilterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FilterParser.filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilter([NotNull] FilterParser.FilterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FilterParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimary([NotNull] FilterParser.PrimaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FilterParser.primary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimary([NotNull] FilterParser.PrimaryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FilterParser.andTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAndTerm([NotNull] FilterParser.AndTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FilterParser.andTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAndTerm([NotNull] FilterParser.AndTermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FilterParser.orTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrTerm([NotNull] FilterParser.OrTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FilterParser.orTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrTerm([NotNull] FilterParser.OrTermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FilterParser.comparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparison([NotNull] FilterParser.ComparisonContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FilterParser.comparison"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparison([NotNull] FilterParser.ComparisonContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="FilterParser.atomic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAtomic([NotNull] FilterParser.AtomicContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FilterParser.atomic"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAtomic([NotNull] FilterParser.AtomicContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace OnlineWallet.Web.QueryLanguage.Parser
