{
	/*
	// Place your snippets for TypeScript React here. Each snippet is defined under a snippet name and has a prefix, body and 
	// description. The prefix is what is used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. Placeholders with the 
	// same ids are connected.
	// Example:
	"Print to console": {
		"prefix": "log",
		"body": [
			"console.log('$1');",
			"$2"
		],
		"description": "Log output to console"
	}
*/
	"React Component": {
		"prefix": "react.component",
		"body": [
			"import * as React from 'react';",
			"",
			"export namespace ${1:${TM_FILENAME_BASE}} {",
			"\texport interface Props {",
			"\t}",
			"\texport interface State {",
			"\t}",
			"}",
			"",
			"export class ${1} extends React.Component<${1}.Props, ${1}.State> {",
			"\tconstructor(props) {",
			"\t\tsuper(props);",
			"\t}",
			"\trender() {",
			"\t\treturn (",
			"\t\t\t$0",
			"\t\t);",
			"\t}",
			"}"
		],
		"description": "Log output to console"
	},
	"React Stateless Function": {
		"prefix": "react.function",
		"body": [
			"import * as React from 'react';",
			"",
			"interface  ${1:${TM_FILENAME_BASE}}Props { $2 }",
			"",
			"export const ${1}: React.SFC< ${1}Props> = ({ $2, ...rest }) => {",
			"\treturn (",
			"\t\t$0",
			"\t);",
			"};",
			"",
			"${1}.defaultProps = { };"
		]
	},
	"React setState Async": {
		"prefix": "react.state.async",
		"body": [
			"this.setState((prevState, props) => {",
			"\treturn {",
			"\t\t$0",
			"\t};",
			"});"
		]
	},
	"React deconstruct": {
		"prefix": "react.deconstruct",
		"body": [
			"const { $1 } = this.props;",
			"const { $0 } = this.state;",
		]
	}
}